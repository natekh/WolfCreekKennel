# Generated by Django 4.1.4 on 2022-12-22 23:35

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Dog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('show_name', models.BooleanField()),
                ('description', models.TextField(blank=True, null=True)),
                ('birthday', models.DateField()),
                ('available_for_sale', models.BooleanField()),
                ('puppy', models.BooleanField()),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('breed', models.CharField(choices=[('EB', 'English Bulldog'), ('FB', 'French Bulldog')], default='EB', max_length=2)),
                ('pedigree', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('main_image', models.ImageField(blank=True, null=True, upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='email',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('answer', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Litter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
                ('main_image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('coming_soon', models.BooleanField(default=False)),
                ('due_date', models.DateField(blank=True, default=None, null=True)),
                ('father', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='father', to='dogs.dog')),
                ('mother', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mother', to='dogs.dog')),
            ],
        ),
        migrations.CreateModel(
            name='Misc_Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='Misc_Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
                ('video', models.FileField(upload_to='videos/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['MOV', 'avi', 'mp4', 'webm', 'mkv'])])),
            ],
        ),
        migrations.CreateModel(
            name='Litter_Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('video', models.FileField(upload_to='videos/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['MOV', 'avi', 'mp4', 'webm', 'mkv'])])),
                ('puppy_litter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='litter_videos', to='dogs.litter')),
            ],
        ),
        migrations.CreateModel(
            name='Litter_Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('image', models.ImageField(upload_to='images/')),
                ('puppy_litter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='litter_images', to='dogs.litter')),
            ],
        ),
        migrations.CreateModel(
            name='Dog_Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('video', models.FileField(upload_to='videos/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['MOV', 'avi', 'mp4', 'webm', 'mkv'])])),
                ('dog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dog_videos', to='dogs.dog')),
            ],
        ),
        migrations.CreateModel(
            name='Dog_Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('image', models.ImageField(upload_to='images/')),
                ('dog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dog_images', to='dogs.dog')),
            ],
        ),
        migrations.AddField(
            model_name='dog',
            name='litter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dogs', to='dogs.litter'),
        ),
    ]
